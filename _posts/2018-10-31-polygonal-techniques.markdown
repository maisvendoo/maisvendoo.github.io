---
layout: post
title:  "Введение в OpenSceneGraph: Техники обработки полигонов"
date:   2018-10-31 09:06:00 +0300
categories: jekyll update
---

OpenSceneGraph поддерживает различные техники обработки полигональной сетки объектов геометрии сцены. Эти методы препроцессинга, такие как редукция полигонов и тесселяция, часто используются для создания и оптимизации полигональных моделей. Они имеют простой интерфейс, но в процессе работу выполняют массу сложных вычислений и не очень подходят для выполнения "на лету".

К описанным техникам относятся:

1. osgUtil::Simplifier - уменьшение числа треугольников в геометрии. Публичный метод simplify() используется для упрощения геометрии моделей.
2. osgUtil::SootingVisitor - вычисление нормалей. Метод smooth() может быть использован для генерации сглаженных нормалей для модели, вместо самостоятельного их расчета и явного задания через массив нормалей.
3. osgUtil::TangentSpaceGenerator - генерация касательных базисных векторов для вершин модели. Задействуется с помощью метода generate() и сохраняет результат, возвращаемый методами getTangentArray(), getNormalArray() и getBinormalArray(). Эти результаты могут быть использованы для различный атрибутов вершин при написании шейдеров на GLSL.
4. osgUtil::Tesselator - выполняет тесселяцию полигональной сетки - разбиение сложных примитивов на последовательность простых (метод retesselatePolygons())
5. osgUtil::TriStripVisitor - конвертирует геометрическую поверхность в набор полос треугольных граней, что позволяет выполнять рендеринг с эффективным расходом памяти. Метод stripify() конвертирует набор примитивов модели в геометрию на базе набора GL_TRIANGLE_STRIP.

Все методы принимают геометрию объекта в качестве параметра, передаваемого по ссылке osg::Geometry&, например так

```cpp
osgUtil::TriStripVisitor tsv;
tsv.stripify(*geom);
```
где под geom понимается экземпляр геометрии, описываемый умным указателем.

Классы osg::Simplifier, osg::SmoothingVisitor и osg::TriStripVisitor могут работать непосредственно с узлами графа сцены, например

```cpp
osgUtil::TriStripVisitor tsv;
node->accept(tsv);
```

Метод accept() обрабатывает все дочерние узлы, до тех пор, пока указанная операция не будет применена ко всем оконечным нодам этой части дерева сцены, хранящимся в нодах типа osg::Geode.

Попробуем на практике технику тесселяции.