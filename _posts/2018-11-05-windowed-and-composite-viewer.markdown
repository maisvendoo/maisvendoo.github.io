---
layout: post
title:  "Введение в OpenSceneGraph: Оконный и композитный режимы отображения"
date:   2018-11-05 21:51:00 +0300
categories: jekyll update
---

## Отображение сцены в оконном режиме

Класс osgViewer::Viewer может быть очень быстро перенастроен на отображение в оконном режиме. Как вы заметили, все предыдущие наши примеры отображались в полноэкранном режиме. Для переключения вьювера в оконный режим существует метод setUpViewInWindow(), который принимает в качестве параметров координаты левого верхнего угла окна, его ширину и высоту в пикселях

```cpp
viewer.setUpViewInWindow(50, 50, 800, 600);
```

Опциоанльно этот метод принимает пятый параметр - номер экрана, на который следует выводить окно, для того случая, если у вас не один монитор. Наверняка работая с несколькими мониторами в Windows вы наблюдали, что сцена расползается на все мониторы в полноэкранном режиме (в Linux такое не наблюдается).

Кроме того, в настройках проекта можно задать переменную окружения OSG_WINDOW таким образом

![](https://habrastorage.org/webt/-5/yg/ge/-5yggeqzivtjkymngxq3xk318qm.png)

что будет эквивалентно вызову setUpViewInWindow(), который в таком случае можно и не выполнять.

![](https://habrastorage.org/webt/2z/z_/px/2zz_pxckvywsn1c3hpebbwwj77e.png)

Для явного указания экрана, на который следует выводить вьювер в полноэкранном режиме можно воспользоваться методом setUpViewOnSingleScreen() указав в качестве параметра номер экрана (по-умолчанию 0). 

OSG поддерживает также демонстрационные сферические дисплеи. Для настройки отображения на таком дисплее можно использвать метод setUpViewFor3DSphericalDisplay().

## Композитный вьювер

Класс osgViewer::Viewer управляет одним видом, отображающим один граф сцены. Кроме него существует класс osgViewer::CompositeViewer который поддерживает несколько видов и несколько сцен. Он имеет те же методы run(), frame() и done() для управления процессом рендеринга, но при этом позволяет добавлять и удалять независимые виды с помощью методов addView() и removeView(), а также получение видов по их индексу методом getView(). Объект вида описывается классом osgViewer::View.

Класс osgViewer::View является базовым для класса osgViewer::Viewer. Он позволяет добалять корневой узел с данными сцены, манипулятор камеры и обработчики событий. ОСновное отличие этого класса (вид) от класа вьювера - он не позволяет рендерить сцену вызовами run() или frame(). Типичный сценарий добавления вида выглядит так

```cpp
osgViewer::CompositeViewer multiviewer;
multiviewer.addView( view );
```