---
layout: post
title:  "Введение в OpenSceneGraph: Копаемся в главном цикле симуляции"
date:   2018-11-05 20:02:00 +0300
categories: jekyll update
---

В OSG класс osgViewer::Viewer поддерживает единственный вьювер для просмотра единственной сцены. Он предоставляет метод setSceneData() для задания содержимого этой сцены и метод run() для рендеринга сцены кадр за кадром. Кроме того, вьювер по умолчанию имеет объект osg::Camera в качестве основной камеры. Матрица вида камеры управляется внутренним объектом osgGA::GUIEventHandelr, обрабатывающим пользовательский ввод. Однако вьювер можно настроить на отображение в полноэкранном режиме, в окне, заставить генерировать стерео изображение, о чем мы и поговорим в последующих статьях.

## Главный цикл симуляции run()

Цикл симуляции, определяемый методом run() выполняет три типа задач

1. Задает манипулятор основной камеры.
2. Настраивает связанный графический контекст.
3. Рендеринг кадров в цикле.

Манипулятор читает события клавиатуры и мыши и изменяет матрицу вида для перемещения камеры по графу сцены. Он устанавлявается с помощью метода setCameraManipulator() параметром которого служит объект osgGA::CameraManipulator, например

```cpp
viewer.setCameraManipulator(new osgGS::TrackballManipulator);
```

Этот вызов добавляет классический манипулятор, обеспечивающий свободное поведение камеры при перемещении. Поскольку манипулятор хранится с помощью умного указателя, всегда можно переопределить его вызовом setCameraManipulator(). Некоторые встроенный классы манипуляторов имеются в OSG в пространстве имен osgGA

|--------------------------|----------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|
|Класс манипулятора        |Описание                                                  |Базовое использование                                                                                              |
|--------------------------|----------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|
|DriveManipulator          |Манипулятор, имитирующий езду по дороге                   |Движение мышью: поворот вида. Перетаскивание мышь: левой кнопкой - ускоряет, правой - замедляет процесс перемещения|
|FlightManipulator         |Манипулятор имитирующий полет                             |Движение мышью: изменяет положение и оринтацию вида                                                                |
|KeySwitchMatrixManipulator|Декоратор, позволяющий переключать разные манипуляторы    |Используя addMatrixManipulator() добавляем манипулятор и переключаемся между манипуляторами нажатием клавиши       |
|NodeTrackerManipulator    |Манипулятор, отслеживающий узел                           |Отслеживаемй узел задается методом setTrackNode()                                                                  |
|SphericalManipulator      |Манипулятор для осмотра сферических объектов              |Левая кнопка мыши: поворот вида, средняя кнопка: смещение вида, правая кнопка: масштабирование вида                |
|TerrainManipulator        |Продвинутый трэк-болл манипулятор для просмотра ландшафтов|Левая кнопка мыши: поворот вида, средняя кнопка: смещение вида, правая кнопка: масштабирование вида                |
|TrackballManipulator      |Трэк-болл манипулятор по умолчанию                        |Левая кнопка мыши: поворот вида, средняя кнопка: смещение вида, правая кнопка: масштабирование вида                |

